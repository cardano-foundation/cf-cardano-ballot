spring.datasource.url=${DB_URL:jdbc:h2:file:./user-verification-service-db;AUTO_RECONNECT=TRUE;AUTO_SERVER=TRUE}
spring.datasource.driverClassName=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:3}
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:30000}
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}

spring.jpa.hibernate.ddl-auto=none
jpa.show.sql=${JPA_SHOW_SQL:false}

spring.flyway.locations=classpath:db/migration/{vendor}

spring.flyway.url=${DB_URL:jdbc:h2:file:./user-verification-service-db;AUTO_RECONNECT=TRUE;AUTO_SERVER=TRUE}
spring.flyway.user=${DB_USERNAME:sa}
spring.flyway.password=${DB_PASSWORD:}
spring.flyway.schemas=${DB_SCHEMA:}
# baselineOnMigrate this will create a baseline version if none exists (https://flywaydb.org/documentation/configuration/parameters/baselineOnMigrate)
spring.flyway.baselineOnMigrate=true
spring.flyway.enabled=true

spring.flyway.out-of-order=true
# baselineOnMigrate this will create a baseline version if none exists (https://flywaydb.org/documentation/configuration/parameters/baselineOnMigrate)
spring.flyway.validateMigrationNaming=true

pending.verification.phone.cleanup.job.cron=${PENDING_VERIFICATION_PHONE_CLEANUP_JOB_CRON:0 */15 * * * ?}

spring.banner.location=classpath:/banner.txt

# disable static content handling
spring.web.resources.add-mappings=false
spring.mvc.throw-exception-if-no-handler-found=true
# force charset in request and responses
server.servlet.encoding.force=true

cardano.network=${CARDANO_NETWORK:PREPROD}

spring.main.allow-bean-definition-overriding=true

endpoints.health.enabled=${HEALTH_ENABLED:true}
management.endpoints.web.exposure.include=${WEB_EXPOSURE_INCLUDE:health,info,prometheus,metrics}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_SHOW_DETAILS:always}

server.port=9093

# default spring profile is a development profile with an external preprod environment
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev--preprod}

cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

ledger.follower.app.base.url=${LEDGER_FOLLOWER_APP_URL:http://localhost:9090}

aws.sns.accessKeyId=${AWS_SNS_ACCESS_KEY_ID}
aws.sns.secretAccessKey=${AWS_SNS_SECRET_ACCESS_KEY}
aws.sns.region=${AWS_SNS_REGION:eu-west-1}

friendly.custom.name=${FRIENDLY_CUSTOM_NAME:Cardano Summit 2023}
validation.expiration.time.minutes=${EXPIRATION_TIME_MINUTES:15}
pending.verification.phone.expiration.time.hours=${PENDING_VERIFICATION_PHONE_EXPIRATION_TIME_HOURS:24}
max.verification.attempts=${MAX_VERIFICATION_ATTEMPTS:10}

# disable in production...
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
