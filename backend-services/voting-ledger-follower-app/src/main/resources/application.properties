spring.datasource.url=${DB_URL:jdbc:h2:file:./voting-ledger-follower-db;AUTO_RECONNECT=TRUE;AUTO_SERVER=TRUE}
spring.datasource.driverClassName=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.hikari.minimum-idle=${DB_MIN_IDLE:3}
spring.datasource.hikari.maximum-pool-size=${DB_MAX_POOL_SIZE:10}
spring.datasource.hikari.idle-timeout=${DB_IDLE_TIMEOUT:30000}
spring.jpa.database-platform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}

spring.jpa.hibernate.ddl-auto=none
jpa.show.sql=${JPA_SHOW_SQL:false}

spring.flyway.locations=classpath:db/store/{vendor},classpath:db/migration/{vendor}

spring.flyway.url=${DB_URL:jdbc:h2:file:./voting-ledger-follower-db;AUTO_RECONNECT=TRUE;AUTO_SERVER=TRUE}
spring.flyway.user=${DB_USERNAME:sa}
spring.flyway.password=${DB_PASSWORD:}
spring.flyway.schemas=${DB_SCHEMA:}
# baselineOnMigrate this will create a baseline version if none exists (https://flywaydb.org/documentation/configuration/parameters/baselineOnMigrate)
spring.flyway.baselineOnMigrate=true
spring.flyway.enabled=true

spring.flyway.out-of-order=true
# baselineOnMigrate this will create a baseline version if none exists (https://flywaydb.org/documentation/configuration/parameters/baselineOnMigrate)
spring.flyway.validateMigrationNaming=true

spring.banner.location=classpath:/banner.txt

# disable static content handling
spring.web.resources.add-mappings=false
spring.mvc.throw-exception-if-no-handler-found=true
# force charset in request and responses
server.servlet.encoding.force=true

cardano.network=${CARDANO_NETWORK:PREPROD}

spring.main.allow-bean-definition-overriding=true

endpoints.health.enabled=${HEALTH_ENABLED:true}
management.endpoints.web.exposure.include=${WEB_EXPOSURE_INCLUDE:health,info,prometheus,metrics,scheduledtasks,flyway}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_SHOW_DETAILS:always}

l1.transaction.metadata.label=${VOTING_METADATA_LABEL:11113}

#blockfrost.url=${BLOCKFROST_URL:https://blockfrost-api.pro.dandelion-preprod.eu-west-1.metadata.dev.cf-deployments.org}
#blockfrost.api.key=${BLOCKFROST_PASSWORD:password}

blockfrost.url=${BLOCKFROST_URL:https://blockfrost-api.pro.dandelion-preprod.eu-west-1.metadata.dev.cf-deployments.org}
blockfrost.api.key=${BLOCKFROST_PASSWORD:password}

cardano-client-lib.backend.type=${CLI_BACKEND:BLOCKFROST}

organiser.account.stakeAddress=${ORGANISER_STAKE_ADDRESS:stake_test1uqwcz0754wwpuhm6xhdpda6u9enyahaj5ynlc9ay5l4mlms4pyqyg}

# comma separated list of event ids that this app will be binding / serving
bind.on.event.ids=${BIND_ON_EVENT_IDS:CF_SUMMIT_2023_3A33,CIP-1694_Pre_Ratification_3316}

# yaci store props
store.cardano.host=${CARDANO_NODE_HOST:preprod-node.world.dev.cardano.org}
store.cardano.port=${CARDANO_NODE_PORT:30000}
# protocol magic 1 = Cardano PreProd network
store.cardano.protocol-magic=${CARDANO_NODE_PROTOCOL_MAGIC:1}

# CF Summit 2023 start block && CIP-1694 start slot
store.cardano.sync-start-blockhash=${YACI_STORE_CARDANO_SYNC_START_BLOCK_HASH:3337e297121fda1262372c28de3d917bd2a60bb1e3c6326e3b7e832eb8017615}
store.cardano.sync-start-slot=${YACI_STORE_CARDANO_SYNC_START_SLOT:38748711}

# 1 day
store.blocks.epoch-calculation-interval=86400

# TODO, how to disable controller`s from Yaci
apiPrefix=${API_PREFIX:/yaci-api}

# default spring profile is a development profile with an external preprod environment
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev--preprod}
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# disable in production...
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}

chain.sync.buffer=${CHAIN_SYNC_BUFFER:2}

# 3 hours delay
voting.event.additional.commitments.delay.slots=${VOTING_EVENT_ADDITIONAL_COMMITMENTS_DELAY_SLOTS:10800}
# 1 epoch delay
voting.event.additional.commitments.delay.epochs=${VOTING_EVENT_ADDITIONAL_COMMITMENTS_DELAY_EPOCHS:1}

server.port=9090

spring.jackson.default-property-inclusion=non_null