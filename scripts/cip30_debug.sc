// brew install amm
// amm cip30_debug.sc

import $ivy.`org.cardanofoundation:cip30-data-signature-parser:0.0.10`

import $ivy.`org.slf4j:slf4j-simple:2.0.9`

import org.cardanofoundation.cip30.CIP30Verifier

import java.util.Optional

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.cardanofoundation.cip30.AddressFormat
import org.cardanofoundation.cip30.MessageFormat

val logger = LoggerFactory.getLogger(getClass());

@main
def main() = {
    val coseSig = "84584aa3012704581de01d813fd4ab9c1e5f7a35da16f75c2e664edfb2a127fc17a4a7ebbfee6761646472657373581de01d813fd4ab9c1e5f7a35da16f75c2e664edfb2a127fc17a4a7ebbfeea166686173686564f45901dd0a202020207b0a202020202020202022757269223a202268747470733a2f2f65766f74696e672e63617264616e6f2e6f72672f766f6c7461697265222c0a202020202020202022616374696f6e223a2022564945575f564f54455f52454345495054222c0a202020202020202022616374696f6e54657874223a2022566f7465222c0a202020202020202022736c6f74223a20223339333635333539222c0a20202020202020202264617461223a207b0a202020202020202020202020226964223a202233643633663266612d336264342d346561332d386663352d666166396266313231353161222c0a2020202020202020202020202261646472657373223a20227374616b655f7465737431757177637a3037353477777075686d36786864706461367539656e796168616a35796e6c63396179356c346d6c6d73347079717967222c0a202020202020202020202020226576656e74223a20224349502d313639345f5072655f526174696669636174696f6e5f33333136222c0a2020202020202020202020202263617465676f7279223a20224348414e47455f474f565f535452554354555245222c0a202020202020202020202020226e6574776f726b223a202250524550524f44220a20202020202020207d0a2020207d0a584023fe5d8af12b46e87f6abd5f02eeeb3bfad582f3d3c34d726bb217d3fbfa87b77e9b12855bc5a0ec481cd7db7a4ddd3321480a8430c1239cf9ea0d25b42d7804"
    val cosePubKey = "a5010102581de01d813fd4ab9c1e5f7a35da16f75c2e664edfb2a127fc17a4a7ebbfee03272006215820c4821499cef96eda9c00cdd0bfbcd2abf7d09436ad424ac7288653a8b4252014"

    val cip30Verifier = new CIP30Verifier(coseSig, Optional.of(cosePubKey));
    val verificationResult = cip30Verifier.verify();

    println(s"valid: ${verificationResult.isValid()}");

    var text = verificationResult.getMessage(MessageFormat.TEXT)

    verificationResult.getAddress(AddressFormat.TEXT).map(bech32 => println(s"Address: $bech32"))
    println(s"Message: $text");
}
